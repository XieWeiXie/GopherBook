
type Query {
    ping(data:String!): ResponseForPing!
    countries(name:String, short: String, all: Boolean):[Country]
    countryMedal(name: String!, year: Int): [Medal]
    countryMeadlRank(year: Int!, sortBy: String!):[Medal]
    history(year: Int): [History]
    histories(orderBy: String): [History]
    fina: FiNa
    blues: [Blue]
    symbol: Symbol
    kinds(class: KindClass!): [Kind]
    competitions(class: CompetitionClass!): [Competition]
    sports(class: SportClass!):[Sport]
    records(name: String, all: Boolean): [Record]
}


type ResponseForPing {
    code: Int
    data: String
}

type Country {
    id:ID!
    createdAt: String
    updatedAt: String
    name: String
    short: String
}

type Medal {
    id: ID!
    createdAt: String
    updatedAt: String
    year: Int
    countryId: ID
    countryName: String
    gold: Int
    silver:Int
    bronze:Int
}

type History {
    id : ID
    createdAt: String
    updatedAt: String
    year: Int
    detail: String
}

type FiNa {
    id: ID
    createdAt: String
    updatedAt: String
    description: String
    established: String
    headquarters: String
    nationalMember: String
    numberOfDisciplines: String
}

type Blue {
    id: ID
    createdAt: String
    updatedAt: String
    short: String
    enName: String
    chName: String
    description: String
    image: String
}

type Symbol {
    id: ID
    createdAt: String
    updatedAt: String
    symbolText: String
    symbolTextImage: String
    symbolTextShort: String
    symbolDescription: String
    symbolDescriptionImage: String
    symbolDescriptionShort: String
    symbolAnimalImage: String
    symbolAnimalDescription: String
    symbolAnimalShort: String
    blueVersions: [Blue]
}

enum KindClass {
    DISCIPLINE
    VENUES
}
type Kind {
    id: ID
    createdAt: String
    updatedAt: String
    name: String
    class: Int
    classString: String
}

enum CompetitionClass {
    MAN
    WOMAN
    TEAM
}

type Competition {
    id:ID
    createdAt: String
    updatedAt: String
    competitionClass: Int
    competitionClassString: String
    detail: String
}


enum SportClass {
    SWIMMING
    DIVING
    HIGHDIVING
    ARTISICSWIMMING
    OPENWATER
    WATERPOLO
}
type Sport {
    id: ID
    createdAt: String
    updatedAt: String
    total: Int
    sportClass: Int
    sportClassString: String
    sportName: String
    description: String
    rule: String
    competitions: [Competition]

}

type Record {
    id: ID
    createdAt: String
    updatedAt: String
    eventName: String
    record: String
    countryId: ID
    countryName: String
    date: String
    location: String
    competitionClass: Int
    competitionClassString: String
    sportClass: Int
    sportClassString: String
    name: String
}